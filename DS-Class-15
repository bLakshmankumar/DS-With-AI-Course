Functions :
===========
  Functions means "Reuse any part of code".
Rules of a functions :
======================
  def <function-name> : Functions start with def and we need to provide function name.
  def <function-name> (): Function means () and : is necessary [Whenever column is come what is the next, intendation will come].
Example :
=========
   def <function-name>():
       # Write your code here
   function_name() # call the fucntion it'll execute the code 
  
Dive into code for functions :
==============================
Code-1 without functions :
--------------------------
Write a basic code for doing addition
   n1=10
   n2=20
   add=n1+n2
   print("the addition of {} and {} is {}".format(n1,n2,add))

Code-1 with functions :
-----------------------
Now we will implement the "functions on this addition code"
   def addition ():
       n1=10
       n2=20
       add=n1+n2
       print("the addition of {} and {} is {}".format(n1,n2,add)) # If you execute this function it'll not give any output, The output will not display until unless we call a function.
   addition() # Now execute the code, It'll call that addition function and execute the code inside that addition function and give the output.

Code-2 with functions :
-----------------------
 def hello_world():
     print("Hello good morning")
hello_world()  # It'll call the function, Then it will execute the code inside the function.

Note : We doesn't know whether the function is correctly defined or wrongly defined until unless we call the function.

Let's deep dive into functions with scenarios :
=================================================
  Requirement -1 : [First write a normal code then will implement the functions on the same code]
  ----------------
    # Take three numbers and find the average
    # Wap to ask the user to enter 3 numbers
    # num1=eval(input())
    # num2=eval(input())
    # num3=eval(input())
    # avg=(num1+num2+num3)/3
  Code -1 : [without functions]
  --------
    # Ask the user to enter three numbers
    num1 = eval(input("Enter the first number: "))
    num2 = eval(input("Enter the second number: "))
    num3 = eval(input("Enter the third number: "))
    # Calculate the average
    avg = (num1 + num2 + num3) / 3
    # Print the average
    print("The average of the three numbers is:", avg)
    # Otherway to print the print statement
    # print ( "The avg of {}, {} and {} is {}". format(num1,num2,num3,avg))

  # Implement this same code using functions :
  --------------------------------------------
    def avg():
        num1 = eval(input("Enter the first number: "))     # Ask the user to enter the number
        num2 = eval(input("Enter the second number: "))    # Ask the user to enter the number
        num3 = eval(input("Enter the third number: "))     # Ask the user to enter the number
        avg = (num1 + num2 + num3) / 3  # Calculate the average
        print ( "The avg of {}, {} and {} is {}". format(num1,num2,num3,avg))
    avg()     # Now Run the code

   # Now Implement this same code using functions with "try" and "exception" blocks :
   ----------------------------------------------------------------------------------
   def avg():        
       try:
          num1 = eval(input("Enter the first number: "))
          num2 = eval(input("Enter the second number: "))
          num3 = eval(input("Enter the third number: "))
          avg = (num1 + num2 + num3) / 3  # Calculate the average
          print ( "The avg of {}, {} and {} is {}". format(num1,num2,num3,avg))
       except Exception as e:
          print (e)
   avg()  # Now Run the code

  Requirement -2 : [First write a normal code then will implement the functions on the same code]
  ----------------
     # Wap ask the user to enter bill amount
     # Ask the user to enter the tip amount 
     # Calculate the total bill
  Code-1:
  =======
    def bill():
        try:
           Bill_Amount = eval(input("Enter bill amount: "))
           Tip_Amount = eval(input("Enter tip amount: "))
           Total_Bill = Bill_Amount+Tip_Amount
           print("Total bill is {} ".format(Total_Bill))
        except Exception as e:
           print(e)
    bill() # Run the code

  Code-2 :
  ========
    def convert_to_inr(amount_usd, conversion_rate=83.00): # Function to convert USD to INR
        return amount_usd * conversion_rate
    def calculate_total_bill(bill_usd, tip_usd): # Function to calculate the total bill
        return bill_usd + tip_usd
    def main():     # Main function to run the program
        try:
            bill_usd = float(input("Enter the bill amount in USD: "))   # Ask the user to enter the bill amount in USD
            tip_usd = float(input("Enter the tip amount in USD: "))     # Ask the user to enter the tip amount in USD
            total_usd = calculate_total_bill(bill_usd, tip_usd)         # Calculate the total bill in USD
            total_inr = convert_to_inr(total_usd)                       # Convert the total bill to INR
            print(f"The total bill amount in INR is: â‚¹{total_inr:.2f}") # Print the total amount in INR
        except ValueError:
            print("Invalid input. Please enter numeric values for the bill and tip amounts.")
    except Exception as e:
        print(f"An unexpected error occurred: {e}")
    # Run the main function
    if __name__ == "__main__":
    main()

# Requirement -3:
=================
# WAP ask the user to get a random num between 1 to 100
# Print it's an even or odd num
# Implement using function
Code -1 :
=========
   import random     # Packages always at the top
   def even_odd1(): 
       print('we are implementing even odd function')
       print("take one number") 
       num=random.randint(1,100)
       if num%2==0:
          print("the remainder is zero")
          print("{} is an even number".format(num))
       else:
          print("the remainder is not equal to zero") 
          print("{) is an odd number".format(num))
   even_odd1()  # Run the code.

Code -2 : [With try and exception blocks]
=========
   import random
   def even_odd1(): 
       try:
          print('we are implementing even odd function')
          print("take one number") 
          num=random.randint(1,100)
          if num%2==0:
             print("the remainder is zero")
             print("{} is an even number".format(num))
          else:
             print("the remainder is not equal to zero") 
             print("{) is an odd number".format(num))
       except Exception as e:
          print(e)
   even_odd1() # Run the code

 Code -3 :
 =========
   import random   # Packages always at the top
   def get_random_number():   # Function to get a random number between 1 and 100
       return random.randint(1, 100)
   def check_even_or_odd(number):  # Function to determine if a number is even or odd
       if number % 2 == 0:
          return "even"
       else:
          return "odd"
   # Main function to run the program
   def main():
       number = get_random_number()        # Get a random number
       result = check_even_or_odd(number)  # Determine if it's even or odd
       print(f"The random number {number} is {result}.")      # Print the result
   # Run the main function
   # if __name__ == "__main__":
   main()
   


