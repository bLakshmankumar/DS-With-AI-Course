# Local and Global variables in functions
# Difference Between Local and Global Variables:

Rules for Local Variables :
===========================
   Local variable we should Define inside a function only.
   Only accessible within that function.
   Disappears once the function has finished executing, so it cannot be used outside the function.

Rules for Global Variables :
============================
   Global varaible we can Define outside of all functions.
   Accessible from any part of the program, including inside functions.
   If modified inside a function, you must use the global keyword to indicate that you’re working with the global variable.

Example -1: Local Variable :
===========================
code-1 :
--------
# The variable we provided inside a function we can call it as local variables
def addition():
    n1=10     # Local variables 
    n2=20     # Local variables
    add=n1+n2 
    print("The addition of {} and {}".format (n1,n2,add))
addition()

Global Variable :
=================
Code- 2 :
---------
# The variables which we provided outside a function we can call it as a global variables
n1=10
n2=20
def addition(): # No need to provide values on inside the fucntion, The function will automatically take the values from global varaibles which we mentioned on above.
    add=n1+n2
    print("The addition of {} and {}".format (n1,n2,add))
addition()

Example -2 : Local Variable :
=============================
code-1 :
-------
def example_function():
    local_var = 10  # This is a local variable
    print("Inside the function, local_var:", local_var)
example_function()
# Trying to access local_var outside the function will give an error
# print(local_var)  # This will cause an error because local_var only exists inside the function

Explanation:
------------
   local_var is created inside the function and only exists there.
   If you try to access it outside the function, you’ll get an error because it doesn't exist outside.

Global Variable :
=================
Code-2 :
--------
global_var = 20          # This is a global variable
def example_function(): 
    print("Inside the function, global_var:", global_var)
example_function()
# You can access global_var outside the function as well
print("Outside the function, global_var:", global_var)

Explanation:
------------
   global_var is defined outside the function, making it a global variable.
   It can be accessed both inside function and outside the function.

Example -3 : Local Variables :
==============================
Code-1:
-------
# Local variables we can't print outside the functions until unless we return the value
def avg():
    num11 = 10  # Local variables
    num22 = 20  # Local variables
    num33 = 30  # Local variables
    avg_value = (num11 + num22 + num33) / 3  # Variable names
    print("The avg of {}, {}, and {} is {}".format(num11, num22, num33, avg_value))
    return num11  # It'll return/store the value of num11
val1 = avg()

# Note :  Local variables are define inside a function, These local variable values we can't use outside the function, Untill unlesswe return those values.

Global Variables :
==================
Code-2 :
--------
num111 = 10  # Global variables
num222 = 20  # Global variables
num333 = 30  # Global variables
def avg():
    avg_value = (num111 + num222 + num333) / 3  # Using global variables
    print("The avg of {}, {}, and {} is {}".format(num111, num222, num333, avg_value))
avg()

# We can print those golbal variables outside rge function as well.

# Example-4 [Global + Local variables] :
=========================================
Code-1 :
--------
num11 = 10  # Global variables
num22 = 20  # Global variables
num33 = 30  # Global variables
def avg():
    num11=40 # Local variable
    num22=30 # Local variable
    num33=50 # Local variable
    avg_value = (num11 + num22 + num33) / 3 
    print("The avg of {}, {}, and {} is {}".format(num11, num22, num33, avg_value))
avg()        # Call the avg function, it'll take the values from inside the function.
print(num11) # This i am trying to print outside the function, So what will be the value it will print.

Output :
========
The avg of 40, 30, and 50 is 40.0
10  # it prints the global variable value which we defined on above the function, why it's print 10, because we call the value from outside function.

Code-2 :
--------
num1 = 10  # Global variables
num2 = 20  # Global variables
def addition(num1):
    num2=300 # Local variable
    add = num1+num2
    print("The addition of {} and {} is {}".format(num1, num2, add))
addition(500)   # 500+300 = 800 is the expected output, because you are manually passing the value 500 as an argument when you call the addition function, which overrides the global value of num1 inside the function's local scope.
print(num1)     # Here i am trying to print outside the function, So what will be the value it will print, Global num1 remains unchanged, so it prints "10"

Out-put :
=========
The addition of 500 and 300 is 800
10

# Requirement -1 : [Important for interview qn]
================================================
  # What is the rule of Local variable we learned ?
  --------------------------------------------------
     We can't use local variable values outside the function until unless we use return statements.
  # But now my requirement is ?
  =============================
     I want to use local variables outside the function, Without using return statement ? How we can achive this with out using return statement ?
     Ans : This we can achive by useing "global" keyword, Local variable we can use as global variable by using "global" keyword.

Code-1 : [Write a normal code by using local variables and try to call them from outside the function let's see the output]
============================================================================================================================
def avg():
    #global m11,m22
    m1=40
    m2=30
    m3=50
    avg_value = (m1 + m2 + m3) / 3  # Using global variables
    print("The avg of {}, {}, and {} is {}".format(m1, m2, m3, avg_value))
avg()     # calling the fucntion
print(m1) # Calling m1 value from outside the function & Now run the code

Output : [It give the function result but Got an Error when i call the local varaible value from outside the function]
========
The avg of 40, 30, and 50 is 40.0
Error :
--------
NameError                                 Traceback (most recent call last)
Cell In[41], line 9
      7     print("The avg of {}, {}, and {} is {}".format(m1, m2, m3, avg_value))
      8 avg()
----> 9 print(m1)

NameError: name 'm1' is not defined

Code-2 : [ Now we will try with global keyword to call the local variable outside the fucntion without return statement and let's see ]
=======================================================================================================================================
def avg():
    global m11,m22,m33
    m11=40
    m22=30
    m33=50
    avg_value = (m11 + m22 + m33) / 3  # Using global variables
    print("The avg of {}, {}, and {} is {}".format(m11, m22, m33, avg_value))
avg()      # calling the fucntion
print(m11)
print(m22)
print(m33) # Calling local values from outside the function & Now run the code

Output : [It able to print the local values outside the function]
========
The avg of 40, 30, and 50 is 40.0 # Output of a function
40   # Value of a local value outside the funtion
30   # Value of a local value outside the funtion
50   # Value of a local value outside the funtion





