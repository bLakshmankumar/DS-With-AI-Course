Requirement -1 [Nov-6]
===============
# Wap to print hello 3 times/iterations using Loop
# don't do
# print ('hello')
# print ('hello')
# print ('hello') in 3 times what is my requirement is, use a single print statement that should run 3 times
Code-1 :
========
for i in range(3): # This 3 means how many times we want to execute/run our code. 
    print ('hello')
Output : 
========
hello
hello
hello

Code-2 :
========
 for i in range(1, 4): # This 1,4  The loop prints "hello" 3 times, as the range(1, 4) creates a sequence that includes the numbers 1, 2, and 3.
    print ('hello')
Output : 
========
hello
hello
hello

Let's do another code :
========================
Code-3 :
========
print ('Hai')
for i in range(3):
    print("Hello")
print("How do you do") 

Output :
========
Python is a step by step process so it'll print the output as a sequence. 
Hai
Hello
Hello
Hello
How do you do 

# Requirement-2 :
# -------------
# I want to print the output in this order
# A
# A
# A
# B
# B
# C
# C
# C

Code-4 :
========
 for i in range(3):
    print("A")
for i in range(2):
    print("B")
for i in range(3):
    print("C")

Output :
========
# A
# A
# A
# B
# B
# C
# C
# C
 (OR)
Code-5
======
# Outer loop for letters
for letter, count in [('A', 3), ('B', 2), ('C', 3)]:
    # Inner loop to print each letter the specified number of times
    for _ in range(count):
        print(letter)
# The outer loop iterates through a list of tuples. Each tuple contains a letter and the number of times it should be printed.
# The inner loop prints the letter as many times as specified in the tuple.
Output :
========
A
A
A
B
B
C
C
C

Requirement-3 :
===============
# Wap ask the user to get the square of the numbers
# Between 10 to 15
# Square of 10 is 100
# Square of 11 is 121
# Square of 12 is 144

Code 
======
# Python program to print the square of numbers between 10 and 15 using a loop.
# First should get the numbers from 10 to 15
for number in range(10, 16):
    square = number * number
    print(f"Square of {number} is {square}")
Output : 
========
Square of 10 is 100
Square of 11 is 121
Square of 12 is 144
Square of 13 is 169
Square of 14 is 196
Square of 15 is 225

# Requirement-4 : 
=================
Use the same above requirement but this time take the inputs from the user.
And do the calculation part.
Code :
======
# Ask the user for the starting and ending numbers
start = eval(input("Enter the starting number: "))
end = eval(input("Enter the ending number: "))

# Loop through the given range and print squares
for number in range(start, end):
    square = number * number
    print(f"Square of {number} is {square}")

Output:
=======
Enter the starting number:  10
Enter the ending number:  15
Square of 10 is 100
Square of 11 is 121
Square of 12 is 144
Square of 13 is 169
Square of 14 is 196
Square of 15 is 225

Requirement-5 :
===============
I want to use the same above code but i want to save the values in a variables and call the variables.
Code : 
======
# Set the variables
start = 10
end = 15

# Loop through the given range and print squares
for number in range(start, end):
    square = number * number
    print(f"Square of {number} is {square}")

Requirement-6 :
===============
I want to use the same code with functions using "without arguments".
code :
======
# define a function 
def square1():
# Ask the user for the starting and ending numbers
  start = int(input("Enter the starting number: "))
  end = int(input("Enter the ending number: "))

# Write a for Loop through the given range and print squares
  for number in range(start, end):
      square = number * number
      print(f"Square of {number} is {square}")
square1() # call the function

Output :
=======
Enter the starting number:  10
Enter the ending number:  12
Square of 10 is 100
Square of 11 is 121

Requirement-7:
==============
I want to use the same code with functions using "with arguments".
Code-1 :
========
# Define a function with arguments
def square_with_range(start, end):
    # Use a loop to print squares from start to end (inclusive)
    for number in range(start, end + 1):
        square = number * number
        print(f"Square of {number} is {square}")

# Call the function with arguments
square_with_range(10, 15)


Code-2 :
=======
# Using variables with a function that has arguments.

def square_with_range(start, end):
    # Use a loop to print squares from start to end (inclusive)
    for number in range(start, end + 1):
        square = number * number
        print(f"Square of {number} is {square}")
# Define variables
start_number = 10
end_number = 15

# Call the function using variables
square_with_range(start_number, end_number)

# Requirement-6 :
=================
#Wap ask the user to print square of the five numbers
#and these five numbers you need to ask user everytime

Code-1 :
========
# Loop 5 times to get 5 numbers from the user
for i in range(5):
    number = eval(input(f"Enter number {i + 1}: "))
    square = number * number
    print(f"Square of {number} is {square}")

OR 
for i in range(5):
    num = eval(input(f"Enter number : "))
    print("The square of {} is {}".format(num, num*num))
What it does:
============
  Loops 5 times.
  Each time, asks the user to enter a number.
  Prints the square of that number.
Purpose :
=========
  Perfect for asking the user 5 different numbers and printing each square â€” most practical for your original request.

Output :
========
Enter number 1:  1
Square of 1 is 1
Enter number 2:  5
Square of 5 is 25
Enter number 3:  6
Square of 6 is 36
Enter number 4:  4
Square of 4 is 16
Enter number 5:  5
Square of 5 is 25


Code-2 :
========
num = eval(input(f"Enter number : "))
for i in range(5):
    print("The square of {} is {}".format(num, num*num))
Meaning :
=========
Takes one number from the user (num).
Loops 5 times, but prints the same square each time.
If user inputs 3:
Output : 
========
Enter number :  3
The square of 3 is 9
The square of 3 is 9
The square of 3 is 9
The square of 3 is 9
The square of 3 is 9

Purpose :
=========
Takes one number and repeats its square 5 times â€” probably not useful practically.

Code-3 :
========
for i in range(5):
    print("The square of {} is {}".format(i, i*i))
OR
for i in range(5):
    print("The square of {} is {}".format(num, num*num))

Meaning :
========
Loops 5 times and Each time, it uses the loop variable i (0 to 4).
Prints the square of i.
purpose :
=========
Auto-generates squares from 0 to 4 â€” no user input needed.
Output :
========
The square of 0 is 0  
The square of 1 is 1  
The square of 2 is 4  
The square of 3 is 9  
The square of 4 is 16  

Requirement-7:
==============
#Wap ask the user to print five times of square number
#This time you need to take everytime a random number between 1 to 20
Code-1 :
========
import random
for i in range(5):
    num=random.randint(1, 20)
    print(f"Random number {i+1} is {num}, and its square is {num * num}")

Code-2 :
========
import random
for i in range(5):
    num=random.randint(1, 20)
    print("The square of {} is {}".format(num, num*num))

Output :
========
Random number 1 is 10, and its square is 100
Random number 2 is 6, and its square is 36
Random number 3 is 11, and its square is 121
Random number 4 is 8, and its square is 64
Random number 5 is 2, and its square is 4

Requirement-8 :
===============
# Wap ask the user print the given num is even or odd
# We need to take the numbers between 10 to 30
# Iterate the loop between 10 to 30
# Every time apply If the i%2==0: Print the corresponding number is even number.
#                  Else print odd num
Code-1 :
========
num=eval(input("Enter number"))
if num%2==0:
   print ( "The given {} is even".format(num))
else:
   print ( "The given {} is odd".format(num))
What it does:
=============
Asks the user to enter one number
Checks if it's even or odd
Prints the result for just that one number

ðŸ§  Purpose:
============
Used when you want to check a specific number, entered by the user.

Output :
========
Enter number 6
The given 6 is even


Code-2 :
========
[instead of asking user to manually enter the number and check the condition create a Loops from 10 to 30.]
# Loop from 10 to 15 (inclusive)
for i in range(10, 15):
    if i % 2 == 0:
        print(f"{i} is an even number.")
    else:
        print(f"{i} is an odd number.")
What it does:
==============
Doesn't ask the user for input
Automatically goes through all numbers from 10 to 15
Prints whether each number is even or odd

ðŸ§  Purpose:
============
 Used when you want to process a range of numbers automatically.

Output :
========
10 is an even number.
11 is an odd number.
12 is an even number.
13 is an odd number.
14 is an even number

# Same above question but this time 
# WAP ask the user to print the given number is even or odd
# You need to take the number randomly between 10 to 30.
# This process you need to do for 5 times.

# Create a for loop to run 5 times 
# Everytime get the random num
# Finally apply if-else condition to get print the given number is even or odd

Code-1 :
========
import random
# Loop 5 times
for i in range(5):
    num=random.randint(1, 20)
# Create if-else statement
    if num%2==0:
       print ("The given num {} is even". format(num))
    else:
       print ("The given num {} is odd". format(num))
What It Does:
-------------
Imports the random module
Runs a loop 5 times
Each time:
Picks a random number between 1 and 20
Checks if it's even or odd
Prints the result
Output :
========
The given num 17 is odd
The given num 10 is even
The given num 16 is even
The given num 19 is odd
The given num 5 is odd


# The same code with functions
Code-1 :
========
# Define the function
def check_even_odd_random(num):
        if num % 2 == 0:
            print("The given number {} is even.".format(num))
        else:
            print("The given number {} is odd.".format(num))
import random
for i in range(5):
    num = random.randint(10, 30)
# Call the function
    check_even_odd_random(num)
What it does :
--------------
Defines a function that takes one argument (num)
Uses that argument to check if it's even or odd
Outside the function:
   A loop runs 5 times
   Each time, it generates a random number between 10 and 30
Passes that number into the function to check even/odd


Code-2 : (google)
=================
import random
# Define the function
def check_even_odd_random(): # Provide any name for function
    for i in range(5):
        num = random.randint(10, 30)
        if num % 2 == 0:
            print("The given number {} is even.".format(num))
        else:
            print("The given number {} is odd.".format(num))
# Call the function
check_even_odd_random()

# What is does :
----------------
Imports the random module
So we can use random.randint() to generate random numbers.
Defines a function called check_even_odd_random()
Functions are reusable blocks of code â€” you can call this one anytime.
Inside the function:
  It runs a for loop 5 times
In each loop:
  Generates a random number between 10 and 30
Uses an if-else condition:
  If num % 2 == 0, the number is even Otherwise, itâ€™s odd
  Prints whether the number is even or odd
Calls the function with check_even_odd_random()
  So the code actually runs and shows output.

Output :
--------
The given number 22 is even.
The given number 27 is odd.
The given number 17 is odd.
The given number 10 is even.
The given number 11 is odd.

01:01:01









